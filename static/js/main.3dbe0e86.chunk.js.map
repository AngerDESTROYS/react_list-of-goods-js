{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","currentSortField","setCurrentSortField","reversedState","setReversedState","vissibleGoods","goods","prepearedGoods","reverse","sort","good1","good2","length","getPrepearedGoods","isStateNotReversedOrSorted","className","onClick","type","classnames","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAqCK,IAAMC,EAAM,WACjB,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EArCR,SAA2BC,EAA3B,GAAwE,IAApCL,EAAmC,EAAnCA,iBAAkBE,EAAiB,EAAjBA,cAC9CI,EAAc,YAAOD,GA8B3B,MA5ByB,KAArBL,GACoB,aAAlBE,GACFI,EAAeC,UAIM,SAArBP,IACoB,aAAlBE,GACFI,EAAeE,OAAOD,UAGF,aAAlBL,GACFI,EAAeE,QAIM,WAArBR,IACoB,aAAlBE,GACFI,EAAeE,MACb,SAACC,EAAOC,GAAR,OAAmBD,EAAME,OAASD,EAAMC,UACxCJ,UAGkB,aAAlBL,GACFI,EAAeE,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,OAASD,EAAMC,WAIzDL,EAMeM,CAAkBf,EACtC,CAAEG,mBAAkBE,kBAEhBW,EACe,aAAlBX,GAAuD,KAArBF,EAyBrC,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QA3BW,WACjBd,EAAoB,SA2Bde,KAAK,SACLF,UACEG,IAAW,iBACT,CAAE,WAAiC,SAArBjB,IALpB,iCAWA,wBACEe,QAlCa,WACnBd,EAAoB,WAkCde,KAAK,SACLF,UACAG,IAAW,oBACT,CAAE,WAAiC,WAArBjB,IALlB,4BAWA,wBACEe,QAzCQ,WACQ,aAAlBb,GACFC,EAAiB,IAGG,aAAlBD,GACFC,EAAiB,aAoCba,KAAK,SACLF,UACEG,IAAW,oBACT,CAAE,WAA8B,aAAlBf,IALpB,qBAWCW,GACC,wBACEE,QA3CI,WACZZ,EAAiB,IACjBF,EAAoB,KA0CZe,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGV,EAAcc,KAAI,SAAAC,GAAI,OACrB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YClInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3dbe0e86.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classnames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPrepearedGoods(goods, { currentSortField, reversedState }) {\n  const prepearedGoods = [...goods];\n\n  if (currentSortField === '') {\n    if (reversedState === 'reversed') {\n      prepearedGoods.reverse();\n    }\n  }\n\n  if (currentSortField === 'Name') {\n    if (reversedState === 'reversed') {\n      prepearedGoods.sort().reverse();\n    }\n\n    if (reversedState !== 'reversed') {\n      prepearedGoods.sort();\n    }\n  }\n\n  if (currentSortField === 'Length') {\n    if (reversedState === 'reversed') {\n      prepearedGoods.sort(\n        (good1, good2) => (good1.length - good2.length),\n      ).reverse();\n    }\n\n    if (reversedState !== 'reversed') {\n      prepearedGoods.sort((good1, good2) => (good1.length - good2.length));\n    }\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [currentSortField, setCurrentSortField] = useState('');\n  const [reversedState, setReversedState] = useState('');\n  const vissibleGoods = getPrepearedGoods(goodsFromServer,\n    { currentSortField, reversedState });\n\n  const isStateNotReversedOrSorted\n  = (reversedState === 'reversed') || (currentSortField !== '');\n\n  const sortByName = () => {\n    setCurrentSortField('Name');\n  };\n\n  const sortByLength = () => {\n    setCurrentSortField('Length');\n  };\n\n  const reverse = () => {\n    if (reversedState === 'reversed') {\n      setReversedState('');\n    }\n\n    if (reversedState !== 'reversed') {\n      setReversedState('reversed');\n    }\n  };\n\n  const reset = () => {\n    setReversedState('');\n    setCurrentSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortByName}\n          type=\"button\"\n          className={\n            classnames('button is-info',\n              { 'is-light': currentSortField !== 'Name' })\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={\n          classnames('button is-success',\n            { 'is-light': currentSortField !== 'Length' })\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={\n            classnames('button is-warning',\n              { 'is-light': reversedState !== 'reversed' })\n            }\n        >\n          Reverse\n        </button>\n\n        {isStateNotReversedOrSorted && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {vissibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}