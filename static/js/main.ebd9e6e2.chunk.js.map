{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","currentSortField","setCurrentSortField","isReversed","setIsReversed","vissibleGoods","goods","prepearedGoods","sort","good1","good2","localeCompare","length","reverse","getPrepearedGoods","isStateNotReversedOrSorted","className","onClick","type","classnames","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SAyBnB,IAAMC,EAAM,WACjB,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAA2BC,EAA3B,GAAqE,IAAjCL,EAAgC,EAAhCA,iBAAkBE,EAAc,EAAdA,WAC9CI,EAAc,YAAOD,GAmB3B,MAjByB,KAArBL,GACFM,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAG7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAG9B,QACE,OAAO,MAKRT,EAAaI,EAAeM,UAAYN,EAMzBO,CAAkBlB,EACtC,CAAEK,mBAAkBE,eAEhBY,EACFZ,GAAcF,EAyBlB,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QA3BW,WACjBf,EAAoBL,IA2BdqB,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAYlB,IAAqBJ,IANvC,iCAaA,wBACEoB,QApCa,WACnBf,EAAoBJ,IAoCdoB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAYlB,IAAqBH,IANvC,4BAaA,wBACEmB,QA7CQ,WACVd,GACFC,GAAc,GAGXD,GACHC,GAAc,IAwCVc,KAAK,SACLF,UACEG,IAAW,oBACT,CAAE,YAAahB,IALrB,qBAWCY,GACC,wBACEE,QA/CI,WACZb,GAAc,GACdF,EAAoB,KA8CZgB,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGX,EAAce,KAAI,SAAAC,GAAI,OACrB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC9HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ebd9e6e2.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classnames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'Name';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPrepearedGoods(goods, { currentSortField, isReversed }) {\n  const prepearedGoods = [...goods];\n\n  if (currentSortField !== '') {\n    prepearedGoods.sort((good1, good2) => {\n      switch (currentSortField) {\n        case SORT_FIELD_NAME: {\n          return good1.localeCompare(good2);\n        }\n\n        case SORT_FIELD_LENGTH: {\n          return good1.length - good2.length;\n        }\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed ? prepearedGoods.reverse() : prepearedGoods;\n}\n\nexport const App = () => {\n  const [currentSortField, setCurrentSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const vissibleGoods = getPrepearedGoods(goodsFromServer,\n    { currentSortField, isReversed });\n\n  const isStateNotReversedOrSorted\n    = isReversed || currentSortField;\n\n  const sortByName = () => {\n    setCurrentSortField(SORT_FIELD_NAME);\n  };\n\n  const sortByLength = () => {\n    setCurrentSortField(SORT_FIELD_LENGTH);\n  };\n\n  const reverse = () => {\n    if (isReversed) {\n      setIsReversed(false);\n    }\n\n    if (!isReversed) {\n      setIsReversed(true);\n    }\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setCurrentSortField('');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortByName}\n          type=\"button\"\n          className={classnames(\n            'button',\n            'is-info',\n            { 'is-light': currentSortField !== SORT_FIELD_NAME },\n          )\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={classnames(\n            'button',\n            'is-success',\n            { 'is-light': currentSortField !== SORT_FIELD_LENGTH },\n          )\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={\n            classnames('button is-warning',\n              { 'is-light': !isReversed })\n          }\n        >\n          Reverse\n        </button>\n\n        {isStateNotReversedOrSorted && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {vissibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}